map_server:
  ros__parameters:
    yaml_filename: ""

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

amcl:
  ros__parameters:
    alpha1: 0.005 #0.2
    alpha2: 0.005 #0.2
    alpha3: 0.005 #0.2
    alpha4: 0.005 #0.2
    alpha5: 0.005 #0.2
    base_frame_id: base_link
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: False
    global_frame_id: map
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: likelihood_field
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: odom
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: nav2_amcl::DifferentialMotionModel
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: False # !!!! FIXME: False for gps
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    # scan_topic: /lidar/localisation_merged/scan
    scan_topic: /scan
    #set_initial_pose: False
    #initial_pose:
    # x: -222.50
    # y: 42.36
    # z: 0.0
    # yaw: 0.0035

bt_navigator:
  ros__parameters:
    # default_nav_to_pose_bt_xml: /workspaces/humble_nuway2_ros2_ws/behavior_trees/navigate_w_replanning_only_if_goal_is_updated.xml
    # default_nav_through_poses_bt_xml: /workspaces/humble_nuway2_ros2_ws/behavior_trees/navigate_w_replanning_only_if_goal_is_updated.xml
    # default_nav_to_pose_bt_xml: /workspaces/humble_nuway2_ros2_ws/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml
    # default_nav_through_poses_bt_xml: /workspaces/humble_nuway2_ros2_ws/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml
    transform_tolerance: 1.0
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom/filtered
    bt_loop_duration: 10
    default_server_timeout: 20
    # plugin_lib_names:
    #   - nav2_compute_path_to_pose_action_bt_node
    #   - nav2_compute_path_through_poses_action_bt_node
    #   - nav2_follow_path_action_bt_node
    #   - nav2_back_up_action_bt_node
    #   - nav2_spin_action_bt_node
    #   - nav2_wait_action_bt_node
    #   - nav2_clear_costmap_service_bt_node
    #   - nav2_is_stuck_condition_bt_node
    #   - nav2_goal_reached_condition_bt_node
    #   - nav2_initial_pose_received_condition_bt_node
    #   - nav2_goal_updated_condition_bt_node
    #   - nav2_reinitialize_global_localization_service_bt_node
    #   - nav2_rate_controller_bt_node
    #   - nav2_smoother_selector_bt_node
    #   - nav2_distance_controller_bt_node
    #   - nav2_goal_updated_controller_bt_node
    #   - nav2_speed_controller_bt_node
    #   - nav2_recovery_node_bt_node
    #   - nav2_smooth_path_action_bt_node
    #   - nav2_pipeline_sequence_bt_node
    #   - nav2_round_robin_node_bt_node
    #   - nav2_transform_available_condition_bt_node
    #   - nav2_time_expired_condition_bt_node
    #   - nav2_distance_traveled_condition_bt_node
    #   - nav2_single_trigger_bt_node
    #   - nav2_navigate_through_poses_action_bt_node
    #   - nav2_navigate_to_pose_action_bt_node
    # error_code_names:
    #   - compute_path_error_code
    #   - follow_path_error_code
    #   - smoother_path_error_code

    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      # - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node

      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node

      - nav2_smoother_selector_bt_node
      # - nav2_goal_updated_controller_bt_node
      - nav2_recovery_node_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      
    error_code_names:
      - compute_path_error_code
      - follow_path_error_code
      - smoother_path_error_code

controller_server:
  ros__parameters:
    controller_frequency: 5.0
    odom_topic: /odom/filtered
    min_x_velocity_threshold: 0.0001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 2.0
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]
    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 60.0

    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 2.5
      yaw_goal_tolerance: 1.5708

    FollowPath:
      ### Pure pursuit parameters
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      lookahead_dist: 4.0
      desired_linear_vel: 4.0
      use_collision_detection: true
      transform_tolerance: 2.0
      goal_dist_tol: 2.0

      use_velocity_scaled_lookahead_dist: False # Whether to use the velocity scaled lookahead distances or constant lookahead_distance.
      lookahead_time: 3.0 # The time (s) to project the velocity by when use_velocity_scaled_lookahead_dist is true
      max_lookahead_dist: 10.0 # The maximum lookahead distance (m) threshold when use_velocity_scaled_lookahead_dist is true.
      min_lookahead_dist: 3.0 # The minimum lookahead distance (m) threshold when use_velocity_scaled_lookahead_dist is true.
      # with these current params we would project velocity forward 500m?

      min_approach_linear_velocity: 0.5 # The minimum velocity (m/s) threshold to apply when approaching the goal to ensure progress. Must be > 0.01.
      max_allowed_time_to_collision_up_to_carrot: 3.0 # The time to project a velocity command forward to check for collisions.

      use_regulated_linear_velocity_scaling: true # whether to scale speed on high curvature paths (slower on high curvature)
      use_cost_regulated_linear_velocity_scaling: true # Whether to use the regulated features for proximity to obstacles (e.g. slow in close proximity to obstacles).
      cost_scaling_dist: 6.0
      cost_scaling_gain: 0.8
      inflation_cost_scaling_factor: 4.0
      regulated_linear_scaling_min_radius: 5.0 # the radius threshold for when speed scaling is triggered on turns
      regulated_linear_scaling_min_speed: 0.15 # The minimum speed (m/s) for which any of the regulated heuristics can send, to ensure process is still achievable even in high cost spaces with high curvature. Must be > 0.1.
      #Can't have both rotate to heading and allow reversing
      use_rotate_to_heading: False # this can only be true on robots which rotate in place
      allow_reversing: true
      # max_robot_pose_search_dist: 30.0 - Leave this as default (max(local_costmap)/2)
      use_interpolation: true

local_costmap:
  local_costmap:
    ros__parameters:
      track_unknown_space: true # If False, treats unknown space as free space, else as unknown space.
      update_frequency: 20.0
      publish_frequency: 20.0
      global_frame: map
      robot_base_frame: base_link
      static_map: False
      rolling_window: True
      width: 30
      height: 30
      resolution: 0.11455
      transform_tolerance: 1.5
      footprint: "[[-2.0, -1.0], [-2.0, 1.0], [2.0, 1.0], [2.0, -1.0]]"
      footprint_padding: 0.40 # 30cm buffer around bus for clearing obstacles
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      filters: ["keepout_filter"]
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        footprint_clearing_enabled: True # Clear any occupied cells under robot footprint.
        observation_sources: local_objects_scan
        local_objects_scan:
          # Topic from point-cloud to laser scan node from merged cloud
          topic: /scan
          max_obstacle_height: 3.0
          inf_is_valid: True # Are infinite returns from laser scanners valid measurements to raycast.
          clearing: True
          marking: True
          obstacle_range: 20.0
          raytrace_range: 25.0
          data_type: "LaserScan"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 3.0 # tolerance in time
      inflation_layer:
        enabled: True
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 1.5 # Exponential decay factor across inflation radius.
        inflation_radius: 0.1 # Radius to inflate costmap around lethal obstacles.
        inflate_unknown: True
        inflate_around_unknown: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      footprint: "[[-2.0, -1.0], [-2.0, 1.0], [2.0, 1.0], [2.0, -1.0]]"
      footprint_padding: 0.4
      update_frequency: 2.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      resolution: 0.11455
      transform_tolerance: 3.0
      plugins: ["static_layer", "inflation_layer", "obstacle_layer"]
      filters: ["keepout_filter"]
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: True
        # subscribe_to_updates: True
        # transform_tolerance: 3.0 # tolerance in time
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        inflation_radius: 1.2
        cost_scaling_factor: 2.0
        inflate_unknown: True
        inflate_around_unknown: True
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
      scan:
        topic: /scan
        max_obstacle_height: 2.0
        clearing: True
        marking: True
        data_type: "LaserScan"
        raytrace_max_range: 10.0
        raytrace_min_range: 0.0
        obstacle_max_range: 9.5
        obstacle_min_range: 0.0
      always_send_full_costmap: True

# planner_server:
#   ros__parameters:
#     expected_planner_frequency: 5.00
#     planner_plugins: ["GridBased"]
#     GridBased:
#       plugin: "nav2_smac_planner/SmacPlannerHybrid"
#       downsample_costmap: False # whether or not to downsample the map
#       downsampling_factor: 1 # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
#       tolerance: 0.25 # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
#       allow_unknown: false # allow traveling in unknown space
#       max_iterations: 1000000 # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
#       max_on_approach_iterations: 1000 # Maximum number of iterations after within tolerances to continue to try to find exact solution
#       max_planning_time: 5.0 # max time in s for planner to plan, smooth
#       motion_model_for_search: "DUBIN" # Hybrid-A* Dubin, Redds-Shepp
#       angle_quantization_bins: 72 # Number of angle bins for search
#       analytic_expansion_ratio: 3.5 # The ratio to attempt analytic expansions during search for final approach.
#       analytic_expansion_max_length: 24.0 # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
#       minimum_turning_radius: 5.0 # minimum turning radius in m of path / vehicle
#       reverse_penalty: 0.0 # Penalty to apply if motion is reversing, must be => 1
#       change_penalty: 1.3 # Penalty to apply if motion is changing directions (L to R), must be >= 0
#       non_straight_penalty: 1.8 # Penalty to apply if motion is non-straight, must be => 1
#       cost_penalty: 2.0 # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
#       use_final_approach_orientation: true
#       retrospective_penalty: 0.015
#       lookup_table_size: 20.0 # Size of the dubin/reeds-sheep distance window to cache, in meters.
#       cache_obstacle_heuristic: False # Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
#       smooth_path: True # If true, does a simple and quick smoothing post-processing to the path

#       smoother:
#         max_iterations: 1000
#         w_smooth: 0.3
#         w_data: 0.2
#         do_refinement: true
#         refinement_num: 2
#         tolerance: 1.0e-10

planner_server:
  ros__parameters:
    expected_planner_frequency: 0.05
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 1.0
      use_astar: True
      allow_unknown: False

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False


behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins:
      # ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
      ["backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [5.0, 0.0, 2.5]
    min_velocity: [-2.0, 0.0, -2.5]
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1

smoother_server:
  ros__parameters:
    costmap_topic: global_costmap/costmap_raw
    footprint_topic: global_costmap/published_footprint
    robot_base_frame: base_link
    transform_timeout: 0.1
    smoother_plugins: ["simple_smoother", "curvature_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      do_refinement: True
    curvature_smoother:
      plugin: "nav2_smoother::SavitzkyGolaySmoother"
      do_refinement: True
      refinement_num: 2
